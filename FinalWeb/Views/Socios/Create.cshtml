@model FinalWeb.Models.Socios

@{
    ViewBag.Title = "Create";
}

<h2>Crear socio</h2>


@using (Html.BeginForm("Create", "Socios", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="panel-body">
    
    <div class="col-md-6">
        <div class="form-group">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Nacimiento, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Nacimiento, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToShortDateString() } })
            @Html.ValidationMessageFor(model => model.Nacimiento, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <br />
            @Html.LabelFor(model => model.Afiliados, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Afiliados, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Afiliados, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Membresia, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Membresia, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Membresia, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label" })
            @*@Html.EnumDropDownListFor(model => model.Membresia, htmlAttributes: new { @class = "form-control" })*@
            <input type = "file" name = "subidafoto">
            @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })

            <br />
            @Html.LabelFor(model => model.LugarTrabajo, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LugarTrabajo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LugarTrabajo, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.DireccionOficina, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DireccionOficina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DireccionOficina, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.TelefonoOficina, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.TelefonoOficina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TelefonoOficina, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Estado, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            <br />
            @Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FechaIngreso, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToShortDateString() } })
            @Html.ValidationMessageFor(model => model.FechaIngreso, "", new { @class = "text-danger" })
        </div>
    </div>

    <input style="margin: 0" type="submit" value="Crear" class="btn btn-success pull-right" />


</div>
}

<div>
    @Html.ActionLink("Volver a socios", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
